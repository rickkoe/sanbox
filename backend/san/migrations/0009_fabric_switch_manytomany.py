# Generated by Django 5.1.6 on 2025-10-24 01:53

from django.db import migrations, models


def migrate_switch_to_switches(apps, schema_editor):
    """
    Migrate existing Fabric.switch ForeignKey relationships to the new
    Fabric.switches ManyToManyField.
    """
    Fabric = apps.get_model('san', 'Fabric')

    # For each fabric that has a switch assigned, add it to the switches M2M field
    for fabric in Fabric.objects.filter(switch__isnull=False).select_related('switch'):
        fabric.switches.add(fabric.switch)


def reverse_migrate_switches_to_switch(apps, schema_editor):
    """
    Reverse migration: restore the first switch from switches M2M to switch FK.
    This is best-effort and may lose data if a fabric had multiple switches.
    """
    Fabric = apps.get_model('san', 'Fabric')

    for fabric in Fabric.objects.prefetch_related('switches').all():
        # Get the first switch if any exist
        first_switch = fabric.switches.first()
        if first_switch:
            fabric.switch = first_switch
            fabric.save(update_fields=['switch'])


class Migration(migrations.Migration):

    dependencies = [
        ('san', '0008_alias_last_modified_at_alias_last_modified_by_and_more'),
    ]

    operations = [
        # Step 1: Add the new ManyToMany field (while keeping the old FK)
        migrations.AddField(
            model_name='fabric',
            name='switches',
            field=models.ManyToManyField(blank=True, help_text='Switches this fabric belongs to', related_name='new_fabrics', to='san.switch'),
        ),
        # Step 2: Migrate data from switch FK to switches M2M
        migrations.RunPython(
            migrate_switch_to_switches,
            reverse_migrate_switches_to_switch,
        ),
        # Step 3: Remove the old ForeignKey field
        migrations.RemoveField(
            model_name='fabric',
            name='switch',
        ),
        # Step 4: Rename the related_name to the final value
        migrations.AlterField(
            model_name='fabric',
            name='switches',
            field=models.ManyToManyField(blank=True, help_text='Switches this fabric belongs to', related_name='fabrics', to='san.switch'),
        ),
    ]
