# Generated by Django 5.1.6 on 2025-10-18 06:31

from django.db import migrations


def populate_wwpn_prefixes(apps, schema_editor):
    """Populate WwpnPrefix table with known vendor prefixes for auto-detection"""
    WwpnPrefix = apps.get_model('san', 'WwpnPrefix')

    # Define all known WWPN prefixes
    # Format: (prefix, wwpn_type, vendor, description)
    prefixes = [
        # IBM Storage Systems (Targets)
        ('5005', 'target', 'IBM', 'IBM Enterprise Storage (DS8000, FlashSystem, SVC)'),
        ('2001', 'target', 'IBM', 'IBM Virtual Target Ports (NPIV)'),
        ('2002', 'target', 'IBM', 'IBM Virtual Target Ports (NPIV)'),
        ('2003', 'target', 'IBM', 'IBM Virtual Target Ports (NPIV)'),
        ('2004', 'target', 'IBM', 'IBM Virtual Target Ports (NPIV)'),
        ('2005', 'target', 'IBM', 'IBM Virtual Target Ports (NPIV)'),
        ('2006', 'target', 'IBM', 'IBM Virtual Target Ports (NPIV)'),
        ('2007', 'target', 'IBM', 'IBM Virtual Target Ports (NPIV)'),
        ('2008', 'target', 'IBM', 'IBM Virtual Target Ports (NPIV)'),

        # IBM Power Servers (Initiators)
        ('c050', 'init', 'IBM', 'IBM Power Physical HBA Ports'),
        ('c005', 'init', 'IBM', 'IBM Power Virtual I/O (NPIV Virtual HBA)'),
        ('1000', 'init', 'IBM/Emulex/VMware', 'IBM Power or Emulex HBA or VMware ESX Virtual'),

        # VMware ESX (Initiators)
        ('2000', 'init', 'Cisco/QLogic', 'Cisco UCS vHBA or QLogic HBA'),
        ('2100', 'init', 'QLogic', 'QLogic HBA'),
        ('2101', 'init', 'QLogic', 'QLogic HBA'),
        ('5000', 'init', 'Emulex', 'Emulex HBA'),
        ('5001', 'init', 'Emulex', 'Emulex HBA'),

        # Other Storage Vendors (Targets)
        ('500a', 'target', 'NetApp', 'NetApp FAS/AFF Storage'),
        ('5006', 'target', 'EMC/Dell', 'EMC/Dell Storage Arrays'),
        ('6000', 'target', 'HPE', 'HPE 3PAR/Primera/Nimble Storage'),
        ('5742', 'target', 'NetApp', 'NetApp E-Series Storage'),
        ('6005', 'target', 'Hitachi', 'Hitachi Storage (HDS/VSP)'),
        ('6006', 'target', 'EMC', 'EMC VMAX/PowerMax Storage'),
        ('5004', 'target', 'Fujitsu', 'Fujitsu ETERNUS Storage'),
        ('5008', 'target', 'Pure Storage', 'Pure Storage FlashArray'),

        # Cisco UCS and FCoE
        ('20cd', 'init', 'Cisco', 'Cisco UCS Blade vHBA'),
        ('20ce', 'init', 'Cisco', 'Cisco UCS Rack vHBA'),

        # Brocade/Broadcom HBAs
        ('1050', 'init', 'Emulex', 'Emulex/Broadcom HBA'),
        ('1060', 'init', 'Emulex', 'Emulex/Broadcom HBA'),

        # Microsoft Hyper-V Virtual HBAs
        ('0025', 'init', 'Microsoft', 'Microsoft Hyper-V Virtual FC HBA'),

        # Linux/Generic HBAs
        ('2110', 'init', 'QLogic', 'QLogic HBA (Linux)'),
        ('5010', 'init', 'Emulex', 'Emulex HBA (Linux)'),
    ]

    # Create prefix records (skip duplicates)
    created_count = 0
    for prefix, wwpn_type, vendor, description in prefixes:
        _, created = WwpnPrefix.objects.get_or_create(
            prefix=prefix.lower(),
            defaults={
                'wwpn_type': wwpn_type,
                'vendor': vendor,
                'description': description
            }
        )
        if created:
            created_count += 1

    print(f"WWPN Prefix migration: Created {created_count} new prefixes, total {len(prefixes)} defined")


def reverse_populate(apps, schema_editor):
    """Remove all WWPN prefixes (reverse migration)"""
    WwpnPrefix = apps.get_model('san', 'WwpnPrefix')
    WwpnPrefix.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('san', '0002_initial'),
    ]

    operations = [
        migrations.RunPython(populate_wwpn_prefixes, reverse_populate),
    ]
