# Generated by Django 5.1.6 on 2025-10-13 14:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('customers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='config',
            name='customer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config', to='customers.customer'),
        ),
        migrations.AddField(
            model_name='customermembership',
            name='customer',
            field=models.ForeignKey(help_text='Customer this membership belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='customers.customer'),
        ),
        migrations.AddField(
            model_name='customermembership',
            name='user',
            field=models.ForeignKey(help_text='User who is a member of this customer', on_delete=django.db.models.deletion.CASCADE, related_name='customer_memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customnamingrule',
            name='customer',
            field=models.ForeignKey(help_text='Customer this naming rule belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='custom_naming_rules', to='customers.customer'),
        ),
        migrations.AddField(
            model_name='customnamingrule',
            name='user',
            field=models.ForeignKey(blank=True, help_text='User this naming rule belongs to (optional for global rules)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_naming_rules', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customvariable',
            name='customer',
            field=models.ForeignKey(help_text='Customer this variable belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='custom_variables', to='customers.customer'),
        ),
        migrations.AddField(
            model_name='customvariable',
            name='user',
            field=models.ForeignKey(blank=True, help_text='User this variable belongs to (optional for global variables)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_variables', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dashboardlayout',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.customer'),
        ),
        migrations.AddField(
            model_name='dashboardlayout',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_layouts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dashboardanalytics',
            name='layout',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.dashboardlayout'),
        ),
        migrations.AddField(
            model_name='dashboardpreset',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dashboardpreset',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customers.customer'),
        ),
        migrations.AddField(
            model_name='dashboardwidget',
            name='layout',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='core.dashboardlayout'),
        ),
        migrations.AddField(
            model_name='dashboardanalytics',
            name='widget',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.dashboardwidget'),
        ),
        migrations.AddField(
            model_name='project',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='User who owns this project', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='config',
            name='active_project',
            field=models.ForeignKey(blank=True, help_text='Legacy field - active project is now tracked in UserConfig per-user.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_configs', to='core.project'),
        ),
        migrations.AddField(
            model_name='projectgroup',
            name='created_by',
            field=models.ForeignKey(help_text='User who created this group', on_delete=django.db.models.deletion.CASCADE, related_name='created_project_groups', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectgroup',
            name='customer',
            field=models.ForeignKey(help_text='Customer this group belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='project_groups', to='customers.customer'),
        ),
        migrations.AddField(
            model_name='projectgroup',
            name='members',
            field=models.ManyToManyField(blank=True, help_text='Users who are members of this group', related_name='project_groups', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='group',
            field=models.ForeignKey(blank=True, help_text="Group that has access to this project (only used when visibility='group')", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='core.projectgroup'),
        ),
        migrations.AddField(
            model_name='tableconfiguration',
            name='customer',
            field=models.ForeignKey(help_text='Customer this configuration belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='table_configurations', to='customers.customer'),
        ),
        migrations.AddField(
            model_name='tableconfiguration',
            name='user',
            field=models.ForeignKey(blank=True, help_text='User this configuration belongs to (optional for global settings)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='table_configurations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userconfig',
            name='active_customer',
            field=models.ForeignKey(blank=True, help_text='Currently active customer for this user', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_for_users', to='customers.customer'),
        ),
        migrations.AddField(
            model_name='userconfig',
            name='active_project',
            field=models.ForeignKey(blank=True, help_text='Currently active project for this user', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_for_users', to='core.project'),
        ),
        migrations.AddField(
            model_name='userconfig',
            name='user',
            field=models.OneToOneField(help_text='User this configuration belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='user_config', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dashboardwidget',
            name='widget_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.widgettype'),
        ),
        migrations.AddIndex(
            model_name='appsettings',
            index=models.Index(fields=['user'], name='core_appset_user_id_d5148f_idx'),
        ),
        migrations.AddIndex(
            model_name='customermembership',
            index=models.Index(fields=['customer', 'user'], name='core_custom_custome_3dc4dd_idx'),
        ),
        migrations.AddIndex(
            model_name='customermembership',
            index=models.Index(fields=['user', 'role'], name='core_custom_user_id_f12e16_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customermembership',
            unique_together={('customer', 'user')},
        ),
        migrations.AddIndex(
            model_name='customnamingrule',
            index=models.Index(fields=['customer', 'table_name'], name='core_custom_custome_46b00d_idx'),
        ),
        migrations.AddIndex(
            model_name='customnamingrule',
            index=models.Index(fields=['user', 'table_name'], name='core_custom_user_id_c9c928_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customnamingrule',
            unique_together={('customer', 'user', 'name', 'table_name')},
        ),
        migrations.AddIndex(
            model_name='customvariable',
            index=models.Index(fields=['customer', 'name'], name='core_custom_custome_2982d1_idx'),
        ),
        migrations.AddIndex(
            model_name='customvariable',
            index=models.Index(fields=['user', 'name'], name='core_custom_user_id_fbd255_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customvariable',
            unique_together={('customer', 'user', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='dashboardlayout',
            unique_together={('user', 'customer')},
        ),
        migrations.AddIndex(
            model_name='dashboardanalytics',
            index=models.Index(fields=['layout', 'event_type', 'timestamp'], name='core_dashbo_layout__632acc_idx'),
        ),
        migrations.AddIndex(
            model_name='dashboardanalytics',
            index=models.Index(fields=['widget', 'event_type', 'timestamp'], name='core_dashbo_widget__6333b2_idx'),
        ),
        migrations.AddIndex(
            model_name='projectgroup',
            index=models.Index(fields=['customer', 'name'], name='core_projec_custome_b2bac8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='projectgroup',
            unique_together={('customer', 'name')},
        ),
        migrations.AddIndex(
            model_name='tableconfiguration',
            index=models.Index(fields=['customer', 'table_name'], name='core_tablec_custome_ca088f_idx'),
        ),
        migrations.AddIndex(
            model_name='tableconfiguration',
            index=models.Index(fields=['user', 'table_name'], name='core_tablec_user_id_debdd7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tableconfiguration',
            unique_together={('customer', 'user', 'table_name')},
        ),
        migrations.AddIndex(
            model_name='userconfig',
            index=models.Index(fields=['user', 'active_customer'], name='core_userco_user_id_b7c2ba_idx'),
        ),
        migrations.AddIndex(
            model_name='userconfig',
            index=models.Index(fields=['user', 'active_project'], name='core_userco_user_id_39ec29_idx'),
        ),
    ]
