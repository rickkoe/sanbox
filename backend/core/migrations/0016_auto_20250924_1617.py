# Generated by Django 5.1.6 on 2025-09-24 16:17

from django.db import migrations, models


def migrate_theme_names(apps, schema_editor):
    """Migrate old theme names to new simplified theme system"""
    DashboardLayout = apps.get_model('core', 'DashboardLayout')
    
    # Map old themes to new ones
    theme_mapping = {
        'minimal': 'light',
        'modern': 'light', 
        'corporate': 'light',
        'colorful': 'light',
        'dark': 'dark'
    }
    
    for old_theme, new_theme in theme_mapping.items():
        DashboardLayout.objects.filter(theme=old_theme).update(theme=new_theme)


def reverse_migrate_theme_names(apps, schema_editor):
    """Reverse migration - map back to old themes"""
    DashboardLayout = apps.get_model('core', 'DashboardLayout')
    
    # For reverse, default light themes to 'modern' (the old default)
    DashboardLayout.objects.filter(theme='light').update(theme='modern')
    # Dark themes stay as 'dark'


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0015_add_custom_template_fields'),
    ]

    operations = [
        # First migrate the data
        migrations.RunPython(migrate_theme_names, reverse_migrate_theme_names),
        
        # Then update the field choices
        migrations.AlterField(
            model_name='dashboardlayout',
            name='theme',
            field=models.CharField(
                choices=[('light', 'Light'), ('dark', 'Dark')],
                default='light',
                max_length=50
            ),
        ),
    ]
