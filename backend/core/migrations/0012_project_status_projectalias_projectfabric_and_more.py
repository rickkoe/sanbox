# Generated by Django 5.1.6 on 2025-10-30 04:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0011_appsettings_audit_log_retention_days_auditlog'),
        ('san', '0011_alter_alias_unique_together_remove_alias_wwpn_and_more'),
        ('storage', '0006_alter_host_unique_together_alter_host_storage_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='project',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('finalized', 'Finalized'), ('closed', 'Closed')], default='draft', help_text='Project lifecycle status', max_length=10),
        ),
        migrations.CreateModel(
            name='ProjectAlias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create - Generate creation commands'), ('delete', 'Delete - Generate deletion commands'), ('modify', 'Modify - Generate modification commands'), ('reference', 'Reference - Include in documentation only')], default='reference', max_length=10)),
                ('field_overrides', models.JSONField(blank=True, default=dict, help_text="Project-specific field values (e.g., {'use': 'target', 'notes': 'Project A notes'})")),
                ('include_in_zoning', models.BooleanField(default=False, help_text='Include this alias in zone generation for this project')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Project-specific notes', null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_project_aliases', to=settings.AUTH_USER_MODEL)),
                ('alias', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to='san.alias')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_aliases', to='core.project')),
            ],
            options={
                'verbose_name': 'Project Alias',
                'verbose_name_plural': 'Project Aliases',
                'ordering': ['project', 'alias__name'],
                'indexes': [models.Index(fields=['project', 'action'], name='core_projec_project_1d62f3_idx'), models.Index(fields=['alias', 'action'], name='core_projec_alias_i_cee3f8_idx')],
                'unique_together': {('project', 'alias')},
            },
        ),
        migrations.CreateModel(
            name='ProjectFabric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create - Generate creation commands'), ('delete', 'Delete - Generate deletion commands'), ('modify', 'Modify - Generate modification commands'), ('reference', 'Reference - Include in documentation only')], default='reference', max_length=10)),
                ('field_overrides', models.JSONField(blank=True, default=dict, help_text="Project-specific field values (e.g., {'zoneset_name': 'proj_a_zoneset'})")),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Project-specific notes', null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_project_fabrics', to=settings.AUTH_USER_MODEL)),
                ('fabric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to='san.fabric')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_fabrics', to='core.project')),
            ],
            options={
                'verbose_name': 'Project Fabric',
                'verbose_name_plural': 'Project Fabrics',
                'ordering': ['project', 'fabric__name'],
                'indexes': [models.Index(fields=['project', 'action'], name='core_projec_project_11b7c1_idx'), models.Index(fields=['fabric', 'action'], name='core_projec_fabric__5d1fb0_idx')],
                'unique_together': {('project', 'fabric')},
            },
        ),
        migrations.CreateModel(
            name='ProjectHost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create - Generate creation commands'), ('delete', 'Delete - Generate deletion commands'), ('modify', 'Modify - Generate modification commands'), ('reference', 'Reference - Include in documentation only')], default='reference', max_length=10)),
                ('field_overrides', models.JSONField(blank=True, default=dict, help_text='Project-specific field values')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Project-specific notes', null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_project_hosts', to=settings.AUTH_USER_MODEL)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to='storage.host')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_hosts', to='core.project')),
            ],
            options={
                'verbose_name': 'Project Host',
                'verbose_name_plural': 'Project Hosts',
                'ordering': ['project', 'host__name'],
                'indexes': [models.Index(fields=['project', 'action'], name='core_projec_project_f20d33_idx'), models.Index(fields=['host', 'action'], name='core_projec_host_id_06d409_idx')],
                'unique_together': {('project', 'host')},
            },
        ),
        migrations.CreateModel(
            name='ProjectPort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create - Generate creation commands'), ('delete', 'Delete - Generate deletion commands'), ('modify', 'Modify - Generate modification commands'), ('reference', 'Reference - Include in documentation only')], default='reference', max_length=10)),
                ('field_overrides', models.JSONField(blank=True, default=dict, help_text='Project-specific field values')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Project-specific notes', null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_project_ports', to=settings.AUTH_USER_MODEL)),
                ('port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to='storage.port')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_ports', to='core.project')),
            ],
            options={
                'verbose_name': 'Project Port',
                'verbose_name_plural': 'Project Ports',
                'ordering': ['project', 'port__name'],
                'indexes': [models.Index(fields=['project', 'action'], name='core_projec_project_134efc_idx'), models.Index(fields=['port', 'action'], name='core_projec_port_id_606ce3_idx')],
                'unique_together': {('project', 'port')},
            },
        ),
        migrations.CreateModel(
            name='ProjectStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create - Generate creation commands'), ('delete', 'Delete - Generate deletion commands'), ('modify', 'Modify - Generate modification commands'), ('reference', 'Reference - Include in documentation only')], default='reference', max_length=10)),
                ('field_overrides', models.JSONField(blank=True, default=dict, help_text='Project-specific field values')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Project-specific notes', null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_project_storage_systems', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_storage_systems', to='core.project')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to='storage.storage')),
            ],
            options={
                'verbose_name': 'Project Storage',
                'verbose_name_plural': 'Project Storage Systems',
                'ordering': ['project', 'storage__name'],
                'indexes': [models.Index(fields=['project', 'action'], name='core_projec_project_ad6772_idx'), models.Index(fields=['storage', 'action'], name='core_projec_storage_e3642f_idx')],
                'unique_together': {('project', 'storage')},
            },
        ),
        migrations.CreateModel(
            name='ProjectSwitch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create - Generate creation commands'), ('delete', 'Delete - Generate deletion commands'), ('modify', 'Modify - Generate modification commands'), ('reference', 'Reference - Include in documentation only')], default='reference', max_length=10)),
                ('field_overrides', models.JSONField(blank=True, default=dict, help_text='Project-specific field values')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Project-specific notes', null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_project_switches', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_switches', to='core.project')),
                ('switch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to='san.switch')),
            ],
            options={
                'verbose_name': 'Project Switch',
                'verbose_name_plural': 'Project Switches',
                'ordering': ['project', 'switch__name'],
                'indexes': [models.Index(fields=['project', 'action'], name='core_projec_project_6715f8_idx'), models.Index(fields=['switch', 'action'], name='core_projec_switch__996571_idx')],
                'unique_together': {('project', 'switch')},
            },
        ),
        migrations.CreateModel(
            name='ProjectVolume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create - Generate creation commands'), ('delete', 'Delete - Generate deletion commands'), ('modify', 'Modify - Generate modification commands'), ('reference', 'Reference - Include in documentation only')], default='reference', max_length=10)),
                ('field_overrides', models.JSONField(blank=True, default=dict, help_text='Project-specific field values')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Project-specific notes', null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_project_volumes', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_volumes', to='core.project')),
                ('volume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to='storage.volume')),
            ],
            options={
                'verbose_name': 'Project Volume',
                'verbose_name_plural': 'Project Volumes',
                'ordering': ['project', 'volume__name'],
                'indexes': [models.Index(fields=['project', 'action'], name='core_projec_project_96e5f0_idx'), models.Index(fields=['volume', 'action'], name='core_projec_volume__9c9399_idx')],
                'unique_together': {('project', 'volume')},
            },
        ),
        migrations.CreateModel(
            name='ProjectZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create - Generate creation commands'), ('delete', 'Delete - Generate deletion commands'), ('modify', 'Modify - Generate modification commands'), ('reference', 'Reference - Include in documentation only')], default='reference', max_length=10)),
                ('field_overrides', models.JSONField(blank=True, default=dict, help_text='Project-specific field values')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Project-specific notes', null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_project_zones', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_zones', to='core.project')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to='san.zone')),
            ],
            options={
                'verbose_name': 'Project Zone',
                'verbose_name_plural': 'Project Zones',
                'ordering': ['project', 'zone__name'],
                'indexes': [models.Index(fields=['project', 'action'], name='core_projec_project_a3f66c_idx'), models.Index(fields=['zone', 'action'], name='core_projec_zone_id_b02f11_idx')],
                'unique_together': {('project', 'zone')},
            },
        ),
    ]
