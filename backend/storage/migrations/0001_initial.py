# Generated by Django 5.1.6 on 2025-07-28 16:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0003_tableconfiguration'),
        ('customers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('storage_type', models.CharField(choices=[('FlashSystem', 'FlashSystem'), ('DS8000', 'DS8000'), ('Switch', 'Switch'), ('Data Domain', 'Data Domain'), ('Unknown', 'Unknown')], max_length=20)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('storage_system_id', models.CharField(blank=True, max_length=100, null=True)),
                ('machine_type', models.CharField(blank=True, max_length=4, null=True)),
                ('model', models.CharField(blank=True, max_length=3, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('system_id', models.CharField(blank=True, max_length=16, null=True)),
                ('wwnn', models.CharField(blank=True, max_length=23, null=True)),
                ('firmware_level', models.CharField(blank=True, max_length=60, null=True)),
                ('primary_ip', models.CharField(blank=True, max_length=40, null=True)),
                ('secondary_ip', models.CharField(blank=True, max_length=40, null=True)),
                ('uuid', models.CharField(blank=True, max_length=36, null=True)),
                ('written_capacity_limit_bytes', models.BigIntegerField(blank=True, null=True)),
                ('unmapped_capacity_percent', models.FloatField(blank=True, null=True)),
                ('last_successful_probe', models.BigIntegerField(blank=True, null=True)),
                ('provisioned_written_capacity_percent', models.FloatField(blank=True, null=True)),
                ('capacity_savings_bytes', models.BigIntegerField(blank=True, null=True)),
                ('raw_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('provisioned_capacity_percent', models.FloatField(blank=True, null=True)),
                ('mapped_capacity_percent', models.FloatField(blank=True, null=True)),
                ('available_written_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('mapped_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('probe_status', models.CharField(blank=True, max_length=64, null=True)),
                ('available_volume_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('capacity_savings_percent', models.FloatField(blank=True, null=True)),
                ('overhead_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('customer_country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('events_status', models.CharField(blank=True, max_length=64, null=True)),
                ('unmapped_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('last_successful_monitor', models.BigIntegerField(blank=True, null=True)),
                ('remote_relationships_count', models.CharField(blank=True, max_length=10, null=True)),
                ('condition', models.CharField(blank=True, max_length=64, null=True)),
                ('customer_number', models.CharField(blank=True, max_length=20, null=True)),
                ('capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('used_written_capacity_percent', models.FloatField(blank=True, null=True)),
                ('pools_count', models.IntegerField(blank=True, null=True)),
                ('pm_status', models.CharField(blank=True, max_length=64, null=True)),
                ('shortfall_percent', models.FloatField(blank=True, null=True)),
                ('used_written_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('available_system_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('used_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('volumes_count', models.IntegerField(blank=True, null=True)),
                ('deduplication_savings_percent', models.FloatField(blank=True, null=True)),
                ('data_collection', models.CharField(blank=True, max_length=64, null=True)),
                ('available_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('used_capacity_percent', models.FloatField(blank=True, null=True)),
                ('disks_count', models.IntegerField(blank=True, null=True)),
                ('unprotected_volumes_count', models.CharField(blank=True, max_length=10, null=True)),
                ('provisioned_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('available_system_capacity_percent', models.FloatField(blank=True, null=True)),
                ('deduplication_savings_bytes', models.BigIntegerField(blank=True, null=True)),
                ('vendor', models.CharField(blank=True, max_length=64, null=True)),
                ('recent_fill_rate', models.FloatField(blank=True, null=True)),
                ('recent_growth', models.FloatField(blank=True, null=True)),
                ('time_zone', models.CharField(blank=True, max_length=64, null=True)),
                ('fc_ports_count', models.IntegerField(blank=True, null=True)),
                ('staas_environment', models.BooleanField(blank=True, null=True)),
                ('element_manager_url', models.URLField(blank=True, null=True)),
                ('probe_schedule', models.TextField(blank=True, null=True)),
                ('acknowledged', models.BooleanField(blank=True, null=True)),
                ('safe_guarded_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('read_cache_bytes', models.BigIntegerField(blank=True, null=True)),
                ('write_cache_bytes', models.BigIntegerField(blank=True, null=True)),
                ('compressed', models.BooleanField(blank=True, null=True)),
                ('callhome_system', models.BooleanField(blank=True, null=True)),
                ('ransomware_threat_detection', models.CharField(blank=True, max_length=64, null=True)),
                ('threat_notification_recipients', models.TextField(blank=True, null=True)),
                ('current_power_usage_watts', models.IntegerField(blank=True, null=True)),
                ('system_temperature_celsius', models.FloatField(blank=True, null=True)),
                ('system_temperature_Fahrenheit', models.FloatField(blank=True, null=True)),
                ('power_efficiency', models.FloatField(blank=True, null=True)),
                ('co2_emission', models.FloatField(blank=True, null=True)),
                ('safeguarded_virtual_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('safeguarded_used_capacity_percentage', models.FloatField(blank=True, null=True)),
                ('data_collection_type', models.CharField(blank=True, max_length=64, null=True)),
                ('data_reduction_savings_percent', models.FloatField(blank=True, null=True)),
                ('data_reduction_savings_bytes', models.BigIntegerField(blank=True, null=True)),
                ('data_reduction_ratio', models.FloatField(blank=True, null=True)),
                ('total_compression_ratio', models.FloatField(blank=True, null=True)),
                ('host_connections_count', models.IntegerField(blank=True, null=True)),
                ('drive_compression_savings_percent', models.FloatField(blank=True, null=True)),
                ('remaining_unallocated_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('pool_compression_savings_bytes', models.BigIntegerField(blank=True, null=True)),
                ('compression_savings_bytes', models.BigIntegerField(blank=True, null=True)),
                ('compression_savings_percent', models.FloatField(blank=True, null=True)),
                ('ip_ports_count', models.IntegerField(blank=True, null=True)),
                ('overprovisioned_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('unallocated_volume_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('managed_disks_count', models.IntegerField(blank=True, null=True)),
                ('drive_compression_savings_bytes', models.BigIntegerField(blank=True, null=True)),
                ('pool_compression_savings_percent', models.FloatField(blank=True, null=True)),
                ('drive_compression_ratio', models.FloatField(blank=True, null=True)),
                ('pool_compression_ratio', models.FloatField(blank=True, null=True)),
                ('topology', models.CharField(blank=True, max_length=64, null=True)),
                ('cluster_id_alias', models.CharField(blank=True, max_length=64, null=True)),
                ('snapshot_written_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('snapshot_provisioned_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('total_savings_ratio', models.FloatField(blank=True, null=True)),
                ('volume_groups_count', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('imported', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storages', to='customers.customer')),
            ],
            options={
                'unique_together': {('customer', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('volume_id', models.CharField(max_length=16)),
                ('volume_number', models.IntegerField(blank=True, null=True)),
                ('volser', models.CharField(blank=True, max_length=20, null=True)),
                ('format', models.CharField(blank=True, max_length=10, null=True)),
                ('natural_key', models.CharField(blank=True, max_length=50, null=True)),
                ('capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('used_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('used_capacity_percent', models.FloatField(blank=True, null=True)),
                ('available_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('written_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('written_capacity_percent', models.FloatField(blank=True, null=True)),
                ('reserved_volume_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('tier0_flash_capacity_percent', models.FloatField(blank=True, null=True)),
                ('tier1_flash_capacity_percent', models.FloatField(blank=True, null=True)),
                ('scm_capacity_percent', models.FloatField(blank=True, null=True)),
                ('enterprise_hdd_capacity_percent', models.FloatField(blank=True, null=True)),
                ('nearline_hdd_capacity_percent', models.FloatField(blank=True, null=True)),
                ('tier_distribution_percent', models.FloatField(blank=True, null=True)),
                ('tier0_flash_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('tier1_flash_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('scm_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('enterprise_hdd_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('nearline_hdd_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('safeguarded_virtual_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('safeguarded_used_capacity_percentage', models.FloatField(blank=True, null=True)),
                ('safeguarded_allocation_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('shortfall_percent', models.FloatField(blank=True, null=True)),
                ('warning_level_percent', models.FloatField(blank=True, null=True)),
                ('compression_saving_percent', models.FloatField(blank=True, null=True)),
                ('grain_size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('compressed', models.BooleanField(blank=True, null=True)),
                ('thin_provisioned', models.CharField(blank=True, max_length=32, null=True)),
                ('encryption', models.CharField(blank=True, max_length=10, null=True)),
                ('flashcopy', models.CharField(blank=True, max_length=10, null=True)),
                ('auto_expand', models.BooleanField(blank=True, null=True)),
                ('easy_tier', models.CharField(blank=True, max_length=32, null=True)),
                ('easy_tier_status', models.CharField(blank=True, max_length=32, null=True)),
                ('pool_name', models.CharField(blank=True, max_length=64, null=True)),
                ('pool_id', models.CharField(blank=True, max_length=64, null=True)),
                ('lss_lcu', models.CharField(blank=True, max_length=10, null=True)),
                ('node', models.CharField(blank=True, max_length=32, null=True)),
                ('block_size', models.IntegerField(blank=True, null=True)),
                ('unique_id', models.CharField(max_length=64, unique=True)),
                ('acknowledged', models.BooleanField(blank=True, null=True)),
                ('status_label', models.CharField(blank=True, max_length=32, null=True)),
                ('raid_level', models.CharField(blank=True, max_length=32, null=True)),
                ('copy_id', models.IntegerField(blank=True, null=True)),
                ('safeguarded', models.CharField(blank=True, max_length=16, null=True)),
                ('last_data_collection', models.BigIntegerField(blank=True, null=True)),
                ('scm_available_capacity_bytes', models.BigIntegerField(blank=True, null=True)),
                ('io_group', models.CharField(blank=True, max_length=32, null=True)),
                ('formatted', models.CharField(blank=True, max_length=10, null=True)),
                ('virtual_disk_type', models.CharField(blank=True, max_length=32, null=True)),
                ('fast_write_state', models.CharField(blank=True, max_length=32, null=True)),
                ('vdisk_mirror_copies', models.CharField(blank=True, max_length=10, null=True)),
                ('vdisk_mirror_role', models.CharField(blank=True, max_length=16, null=True)),
                ('deduplicated', models.CharField(blank=True, max_length=10, null=True)),
                ('imported', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volumes', to='storage.storage')),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('acknowledged', models.CharField(blank=True, max_length=10, null=True)),
                ('wwpns', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=32, null=True)),
                ('storage_system', models.CharField(blank=True, max_length=64, null=True)),
                ('associated_resource', models.CharField(blank=True, max_length=100, null=True)),
                ('host_type', models.CharField(blank=True, max_length=64, null=True)),
                ('vols_count', models.IntegerField(blank=True, null=True)),
                ('fc_ports_count', models.IntegerField(blank=True, null=True)),
                ('last_data_collection', models.BigIntegerField(blank=True, null=True)),
                ('volume_group', models.CharField(blank=True, max_length=100, null=True)),
                ('natural_key', models.CharField(blank=True, max_length=64, null=True)),
                ('imported', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host_project', to='core.project')),
                ('storage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owning_storage', to='storage.storage')),
                ('volumes', models.ManyToManyField(blank=True, related_name='hosts', to='storage.volume')),
            ],
            options={
                'unique_together': {('project', 'name')},
            },
        ),
    ]
